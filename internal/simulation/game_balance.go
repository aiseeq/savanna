package simulation

// game_balance.go содержит все константы игрового баланса
// Устраняет магические числа и обеспечивает единую точку настройки игровых параметров

// === БАЗОВЫЕ РАЗМЕРЫ ЖИВОТНЫХ ===
// Это единственные "магические" константы в проекте - все остальные выводятся от них
// КРИТИЧЕСКИ ВАЖНО: ВСЕ РАЗМЕРЫ В ТАЙЛАХ (физическая ширина тайла = 1.0)

const (
	// Базовые радиусы животных (в ТАЙЛАХ - будут конвертированы в пиксели для Size компонента)
	// ФИНАЛЬНЫЕ ЗНАЧЕНИЯ согласно плану стабилизации:
	// Заяц: радиус 0.5 тайла, видение 3.0 тайла, скорость 0.6 тайла/сек
	// Волк: радиус 0.75 тайла, видение ≈5.0 тайлов, атака 0.9 тайла, скорость 1.0 тайл/сек
	RabbitBaseRadius = 0.5  // Заяц - радиус 0.5 тайла → 16 пикселей после конвертации
	WolfBaseRadius   = 0.75 // Волк - радиус 0.75 тайла → 24 пикселя после конвертации

	// Универсальные множители для неизвестных типов животных
	DefaultAnimalRadius = 0.03 // Средний размер в тайлах (уменьшен в 10 раз)
	DefaultAnimalSpeed  = 0.1  // Разумная скорость в тайлах/сек (уменьшена в 20 раз)
	DefaultAnimalHealth = 50   // Хиты остаются в абсолютных единицах

	// Специальные значения Target в EatingState
	GrassEatingTarget = 0 // Target = 0 означает поедание травы (не сущности)
)

// === РАЗМЕРНЫЕ МНОЖИТЕЛИ ===
// Все размеры выводятся от базового радиуса через явные множители

const (
	// Множители радиусов
	CollisionRadiusMultiplier = 1.0 // Радиус коллизий = базовый радиус

	// Множители дальности видения (размер влияет на обзор)
	// ИСПРАВЛЕНИЕ: Разумные значения для тайловой системы
	RabbitVisionMultiplier  = 6.0 // Заяц видит на 3 тайла (0.5 * 6 = 3.0)
	WolfVisionMultiplier    = 6.7 // Волк видит на 5 тайлов (0.75 * 6.7 ≈ 5.0)
	DefaultVisionMultiplier = 8.0 // Умеренная дальность видения (2.4 тайла)

	// Множители дальности атаки (только для хищников)
	WolfAttackRangeMultiplier = 1.2 // Атака на 0.9 тайла (0.75 * 1.2 = 0.9) - близкая атака

	// Множители дальности побега (травоядные убегают от хищников)
	// ИСПРАВЛЕНИЕ: Зайцы убегают при виде волка с разумного расстояния
	RabbitFleeDistanceMultiplier = 4.0 // Заяц убегает на расстоянии 2 тайла (0.5 * 4 = 2.0)
)

// === ХАРАКТЕРИСТИКИ ЗДОРОВЬЯ ===

const (
	// Здоровье животных (соотносится с размером и ролью)
	RabbitMaxHealth = 50  // Хрупкое травоядное
	WolfMaxHealth   = 100 // Выносливый хищник

	// Урон и боевые характеристики
	WolfAttackDamageDefault = 35  // Урон атаки волка (по умолчанию)
	WolfAttackCooldown      = 2.0 // Секунды между атаками
	WolfHitChance           = 1.0 // 100% шанс попадания (повышено с 0.9 для стабильности тестов)

	// Пацифистские животные не атакуют
	PacifistAttackDamage   = 0
	PacifistAttackCooldown = 0.0
	PacifistHitChance      = 0.0
)

// === СКОРОСТНЫЕ ХАРАКТЕРИСТИКИ ===

const (
	// Базовые скорости животных (ТАЙЛЫ/секунда)
	// ФИНАЛЬНЫЕ ЗНАЧЕНИЯ согласно плану стабилизации:
	RabbitBaseSpeed = 0.6 // Заяц: 0.6 тайла/сек - разумная скорость для геймплея
	WolfBaseSpeed   = 1.0 // Волк: 1.0 тайл/сек - может догнать зайца

	// Множители скорости в разных состояниях поведения
	SearchSpeedMultiplier    = 0.8 // Поиск еды/добычи
	WanderingSpeedMultiplier = 0.7 // Случайное блуждание
	ContentSpeedMultiplier   = 0.3 // Спокойное состояние
	HuntingSpeedMultiplier   = 1.0 // Активная охота (полная скорость)
)

// === ПОРОГИ ГОЛОДА ===

const (
	// Пороги начала поиска еды (% от максимального голода)
	RabbitHungerThreshold  = 90.0 // Заяц ест часто
	WolfHungerThreshold    = 60.0 // Волк ест реже
	DefaultHungerThreshold = 80.0 // Умеренный аппетит

	// Максимальное значение голода для всех животных
	MaxHungerLimit = 100.0

	// Начальный голод новых животных (% сытости при создании)
	RabbitInitialHunger  = 80.0 // Зайцы создаются довольно сытыми
	WolfInitialHunger    = 70.0 // Волки создаются умеренно голодными
	DefaultInitialHunger = 75.0 // Умеренная начальная сытость

	// ПРИМЕЧАНИЕ: SatietyTolerance перенесена в constants.go для устранения дублирования
)

// === ТАЙМЕРЫ ПОВЕДЕНИЯ ===

const (
	// Интервалы смены направления движения (секунды)
	RabbitMinDirectionTime = 1.0 // Заяц быстро меняет направление
	RabbitMaxDirectionTime = 4.0

	WolfMinDirectionTime = 2.0 // Волк движется более целенаправленно
	WolfMaxDirectionTime = 6.0

	DefaultMinDirectionTime = 1.0 // Умеренная частота смены направления
	DefaultMaxDirectionTime = 4.0
)

// === ФИЗИЧЕСКИЕ КОНСТАНТЫ СИМУЛЯЦИИ ===

const (
	// Скорость уменьшения голода
	BaseHungerDecreaseRate = 2.0 // Процентов в секунду

	// Урон здоровью при голодании
	BaseHealthDamageRate      = 1.0 // Хитов в секунду при голоде = 0
	StarvationDamagePerSecond = 1.0 // Алиас для новой системы StarvationDamageSystem

	// Константы поедания травы
	GrassPerEatingTick   = 1.0  // Трава съедаемая за кадр анимации (возвращено к оригиналу)
	GrassNutritionValue  = 2.0  // Сколько сытости дает 1 единица травы (возвращено к оригиналу)
	MinGrassAmountToFind = 10.0 // Минимальное количество травы для поедания

	// Прогресс поедания (для расчета процента завершения)
	GrassEatingProgressDivisor = 10.0 // Делитель для прогресса (10 единиц травы = 100% прогресса)

	// Константы поедания мяса (хищники)
	CorpseNutritionPerTick = 5.0 // Питательность съедаемая за кадр анимации (снижено для баланса как у зайцев)
	// ПРИМЕЧАНИЕ: NutritionToHungerRatio перенесена в constants.go для устранения дублирования
	EatingRange = 0.5 // Дистанция для поедания трупов (в тайлах)

	// Прогресс поедания (для UI)
	EatingProgressDivisor = 10.0 // Делитель для расчета прогресса (0-1)
)

// === ВЛИЯНИЕ СЫТОСТИ И ЗДОРОВЬЯ НА СКОРОСТЬ ===

const (
	// НОВАЯ ЛОГИКА СКОРОСТИ (по требованию пользователя):
	// 1. Голодные (< 80%) бегают с полной скоростью
	// 2. Сытые (> 80%) замедляются: скорость *= (1 + 0.8 - сытость)
	// 3. Раненые: скорость *= (процент_здоровья / 100)

	SatiatedThreshold             = 80.0 // При сытости > 80% животные замедляются
	CriticalHealthThreshold       = 20.0 // При здоровье < 20% критическое замедление
	LowHealthThreshold            = 50.0 // При здоровье < 50% умеренное замедление
	CriticalHealthSpeedMultiplier = 0.5  // Критично раненые животные
	LowHealthSpeedMultiplier      = 0.8  // Раненые животные

	// Константы для расчета скорости сытых животных (устраняет магические числа в feeding.go)
	PercentToRatioConversion = 100.0 // Переводим проценты в доли (90% → 0.9)
	SatietySlowdownOffset    = 0.8   // Формула замедления сытых животных: 1.0 + 0.8 - satietyRatio
	NormalSpeedMultiplier    = 1.0   // Нормальная скорость (множитель)
	MinimumSpeedMultiplier   = 0.1   // Минимальная скорость для безопасности

)

// === СЛУЧАЙНОЕ ДВИЖЕНИЕ ===

const (
	// Параметры случайного блуждания
	RandomWalkTimeMin        = 2.0 // Минимальное время движения в одном направлении
	RandomWalkTimeMax        = 5.0 // Максимальное время движения в одном направлении
	RandomSpeedMinMultiplier = 0.5 // Минимальный множитель скорости
	RandomSpeedMaxMultiplier = 1.0 // Максимальный множитель скорости
)

// === СИСТЕМНЫЕ ПАРАМЕТРЫ ===

const (
	// Параметры для FeedingSystem
	LargeAnimalSizeThreshold = 0.4 // Порог радиуса для "крупного" животного (в тайлах)
	LargeAnimalHungerRate    = 0.5 // Крупные животные голодают в 2 раза медленнее
)

// === БОЕВЫЕ КОНСТАНТЫ ===

const (
	// Таймеры фаз атаки (устраняет магические числа в attack_system.go)
	AttackWindupDuration = 0.08 // Длительность замаха (секунды)
	AttackStrikeDuration = 0.2  // Длительность удара (секунды)

	// Интенсивность визуальных эффектов
	MaxDamageFlashIntensity = 1.0 // Максимальная интенсивность мигания при уроне
)

// === ГЕЙМПЛЕЙНЫЕ КОНСТАНТЫ ===

const (
	// Fallback порог голода для неизвестных животных
	FallbackHungerThreshold = 75.0

	// Множитель расстояния для проверки близости к траве
	GrassProximityMultiplier = 1.5 // Животное должно быть в 1.5x радиуса от травы

	// Большое число для поиска минимального расстояния
	LargeDistanceValue = 1e9
)
