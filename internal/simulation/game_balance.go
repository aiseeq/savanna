package simulation

// game_balance.go содержит все константы игрового баланса
// Устраняет магические числа и обеспечивает единую точку настройки игровых параметров

// === БАЗОВЫЕ РАЗМЕРЫ ЖИВОТНЫХ ===
// Это единственные "магические" константы в проекте - все остальные выводятся от них

const (
	// Базовые радиусы животных (в пикселях)
	RabbitBaseRadius = 16.0 // Заяц - небольшое травоядное
	WolfBaseRadius   = 24.0 // Волк - крупный хищник

	// Универсальные множители для неизвестных типов животных
	DefaultAnimalRadius = 10.0
	DefaultAnimalSpeed  = 15.0
	DefaultAnimalHealth = 50

	// Специальные значения Target в EatingState
	GrassEatingTarget = 0 // Target = 0 означает поедание травы (не сущности)
)

// === РАЗМЕРНЫЕ МНОЖИТЕЛИ ===
// Все размеры выводятся от базового радиуса через явные множители

const (
	// Множители радиусов
	CollisionRadiusMultiplier = 1.0 // Радиус коллизий = базовый радиус

	// Множители дальности видения (размер влияет на обзор)
	RabbitVisionMultiplier  = 6.25 // 100.0 / 16.0 = 6.25x от размера
	WolfVisionMultiplier    = 8.33 // 200.0 / 24.0 = 8.33x от размера
	DefaultVisionMultiplier = 5.0  // Умеренная дальность видения

	// Множители дальности атаки (только для хищников)
	WolfAttackRangeMultiplier = 1.2 // Атака дальше своего размера

	// Множители дальности побега (травоядные убегают от хищников)
	RabbitFleeDistanceMultiplier = 3.125 // 50.0 / 16.0 = 3.125x от размера
)

// === ХАРАКТЕРИСТИКИ ЗДОРОВЬЯ ===

const (
	// Здоровье животных (соотносится с размером и ролью)
	RabbitMaxHealth = 50  // Хрупкое травоядное
	WolfMaxHealth   = 100 // Выносливый хищник

	// Урон и боевые характеристики
	WolfAttackDamageDefault = 35  // Урон атаки волка (по умолчанию)
	WolfAttackCooldown      = 2.0 // Секунды между атаками
	WolfHitChance           = 0.9 // 90% шанс попадания

	// Пацифистские животные не атакуют
	PacifistAttackDamage   = 0
	PacifistAttackCooldown = 0.0
	PacifistHitChance      = 0.0
)

// === СКОРОСТНЫЕ ХАРАКТЕРИСТИКИ ===

const (
	// Базовые скорости животных (пиксели/секунда)
	RabbitBaseSpeed = 20.0 // Быстрое, но небольшое животное
	WolfBaseSpeed   = 30.0 // Крупный и быстрый хищник

	// Множители скорости в разных состояниях поведения
	SearchSpeedMultiplier    = 0.8 // Поиск еды/добычи
	WanderingSpeedMultiplier = 0.7 // Случайное блуждание
	ContentSpeedMultiplier   = 0.3 // Спокойное состояние
	HuntingSpeedMultiplier   = 1.0 // Активная охота (полная скорость)
)

// === ПОРОГИ ГОЛОДА ===

const (
	// Пороги начала поиска еды (% от максимального голода)
	RabbitHungerThreshold  = 90.0 // Заяц ест часто
	WolfHungerThreshold    = 60.0 // Волк ест реже
	DefaultHungerThreshold = 80.0 // Умеренный аппетит

	// Максимальное значение голода для всех животных
	MaxHungerLimit = 100.0

	// ПРИМЕЧАНИЕ: SatietyTolerance перенесена в constants.go для устранения дублирования
)

// === ТАЙМЕРЫ ПОВЕДЕНИЯ ===

const (
	// Интервалы смены направления движения (секунды)
	RabbitMinDirectionTime = 1.0 // Заяц быстро меняет направление
	RabbitMaxDirectionTime = 4.0

	WolfMinDirectionTime = 2.0 // Волк движется более целенаправленно
	WolfMaxDirectionTime = 6.0

	DefaultMinDirectionTime = 1.0 // Умеренная частота смены направления
	DefaultMaxDirectionTime = 4.0
)

// === ФИЗИЧЕСКИЕ КОНСТАНТЫ СИМУЛЯЦИИ ===

const (
	// Скорость уменьшения голода
	BaseHungerDecreaseRate = 2.0 // Процентов в секунду

	// Урон здоровью при голодании
	BaseHealthDamageRate = 1.0 // Хитов в секунду при голоде = 0

	// Константы поедания травы
	GrassPerEatingTick   = 1.0  // Трава съедаемая за кадр анимации (снижено для баланса)
	GrassNutritionValue  = 2.0  // Сколько сытости дает 1 единица травы
	MinGrassAmountToFind = 10.0 // Минимальное количество травы для поедания

	// Константы поедания мяса (хищники)
	CorpseNutritionPerTick = 5.0 // Питательность съедаемая за кадр анимации (снижено для баланса как у зайцев)
	// ПРИМЕЧАНИЕ: NutritionToHungerRatio перенесена в constants.go для устранения дублирования
	EatingRange = 15.0 // Дистанция для поедания трупов

	// Прогресс поедания (для UI)
	EatingProgressDivisor = 10.0 // Делитель для расчета прогресса (0-1)
)

// === ВЛИЯНИЕ СЫТОСТИ И ЗДОРОВЬЯ НА СКОРОСТЬ ===

const (
	// НОВАЯ ЛОГИКА СКОРОСТИ (по требованию пользователя):
	// 1. Голодные (< 80%) бегают с полной скоростью
	// 2. Сытые (> 80%) замедляются: скорость *= (1 + 0.8 - сытость)
	// 3. Раненые: скорость *= (процент_здоровья / 100)

	OverfedSpeedThreshold = 80.0 // При сытости > 80% животные замедляются

)

// === СЛУЧАЙНОЕ ДВИЖЕНИЕ ===

const (
	// Параметры случайного блуждания
	RandomWalkTimeMin        = 2.0 // Минимальное время движения в одном направлении
	RandomWalkTimeMax        = 5.0 // Максимальное время движения в одном направлении
	RandomSpeedMinMultiplier = 0.5 // Минимальный множитель скорости
	RandomSpeedMaxMultiplier = 1.0 // Максимальный множитель скорости
)

// === СИСТЕМНЫЕ ПАРАМЕТРЫ ===

const (
	// Параметры для FeedingSystem
	LargeAnimalSizeThreshold = 15.0 // Порог радиуса для "крупного" животного
	LargeAnimalHungerRate    = 0.5  // Крупные животные голодают в 2 раза медленнее
)

// === ГЕЙМПЛЕЙНЫЕ КОНСТАНТЫ ===

const (
	// Fallback порог голода для неизвестных животных
	FallbackHungerThreshold = 75.0

	// Множитель расстояния для проверки близости к траве
	GrassProximityMultiplier = 1.5 // Животное должно быть в 1.5x радиуса от травы
)
