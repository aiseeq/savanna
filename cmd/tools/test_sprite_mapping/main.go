package main

import (
	"fmt"
)

// –ö–æ–ø–∏—Ä—É–µ–º enum –∏–∑ animation/system.go
type AnimationType uint8

const (
	AnimIdle AnimationType = iota
	AnimWalk
	AnimRun
	AnimDeathDying
	AnimDeathDecay
	AnimEat
	AnimAttack
)

func main() {
	fmt.Println("üé¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∞–Ω–∏–º–∞—Ü–∏–π –∏ —Å–ø—Ä–∞–π—Ç–æ–≤")
	fmt.Println("==============================================")

	// –ê–Ω–∏–º–∞—Ü–∏–∏ –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –≤ sprite_renderer.go
	loadedAnimations := map[AnimationType]string{
		AnimIdle:       "idle",
		AnimWalk:       "walk",
		AnimRun:        "run",
		AnimAttack:     "attack",
		AnimEat:        "eat",
		AnimDeathDying: "dead",
	}

	fmt.Println("\nüìã –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ enum -> —Å–ø—Ä–∞–π—Ç—ã:")
	for animType, spriteName := range loadedAnimations {
		fmt.Printf("  AnimationType %d (%s) -> \"%s\" —Å–ø—Ä–∞–π—Ç—ã\n",
			int(animType), getAnimName(animType), spriteName)
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ AnimIdle = 0 (—á—Ç–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ)
	fmt.Printf("\nüîç –ù–∞—á–∞–ª—å–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è: AnimIdle = %d\n", int(AnimIdle))

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è enum
	fmt.Println("\nüìä –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ AnimationType:")
	allAnims := []AnimationType{AnimIdle, AnimWalk, AnimRun, AnimDeathDying, AnimDeathDecay, AnimEat, AnimAttack}
	for _, anim := range allAnims {
		spriteName, loaded := loadedAnimations[anim]
		status := "‚ùå –ù–ï –ó–ê–ì–†–£–ñ–ï–ù"
		if loaded {
			status = "‚úÖ –∑–∞–≥—Ä—É–∂–µ–Ω –∫–∞–∫ \"" + spriteName + "\""
		}
		fmt.Printf("  %d: %s - %s\n", int(anim), getAnimName(anim), status)
	}

	// –ò—â–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
	fmt.Println("\n‚ö†Ô∏è  –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:")

	if _, hasDecay := loadedAnimations[AnimDeathDecay]; !hasDecay {
		fmt.Printf("  - AnimDeathDecay (%d) –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –Ω–æ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è\n", int(AnimDeathDecay))
	}

	fmt.Println("\nüéØ –í—ã–≤–æ–¥:")
	fmt.Println("  –ï—Å–ª–∏ –∂–∏–≤–æ—Ç–Ω–æ–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è —Å AnimIdle (0), —Ç–æ –¥–æ–ª–∂–Ω—ã –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è \"idle\" —Å–ø—Ä–∞–π—Ç—ã")
	fmt.Println("  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –≤ assets –µ—Å—Ç—å hare_idle_1.png –∏ wolf_idle_1.png")
}

func getAnimName(anim AnimationType) string {
	switch anim {
	case AnimIdle:
		return "AnimIdle"
	case AnimWalk:
		return "AnimWalk"
	case AnimRun:
		return "AnimRun"
	case AnimDeathDying:
		return "AnimDeathDying"
	case AnimDeathDecay:
		return "AnimDeathDecay"
	case AnimEat:
		return "AnimEat"
	case AnimAttack:
		return "AnimAttack"
	default:
		return "Unknown"
	}
}
