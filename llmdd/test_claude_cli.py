#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Claude CLI
"""

import subprocess
import sys
import json
from pathlib import Path

def test_claude_cli():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É Claude CLI —Å –ø—Ä–æ—Å—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Claude CLI...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–º–ø—Ç
        prompt_file = Path("llmdd/test_prompt.md")
        prompt_file.parent.mkdir(exist_ok=True)
        prompt_file.write_text("–ü—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—Ç—å '–¢–µ—Å—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç' –∏ –Ω–∏—á–µ–≥–æ –±–æ–ª—å—à–µ", encoding='utf-8')
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º Claude CLI —Å JSON –≤—ã–≤–æ–¥–æ–º
        cmd = ["claude", "--dangerously-skip-permissions", "-p", "--output-format", "json", f"@{prompt_file}"]
        print(f"üìã –ö–æ–º–∞–Ω–¥–∞: {' '.join(cmd)}")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º communicate() –≤–º–µ—Å—Ç–æ Popen –¥–ª—è JSON —Ñ–æ—Ä–º–∞—Ç–∞
        result = subprocess.run(
            cmd,
            capture_output=True,
            text=True,
            encoding='utf-8'
        )
        
        stdout = result.stdout
        stderr = result.stderr
        
        print(f"üî¢ Exit code: {result.returncode}")
        print(f"üì§ STDOUT:")
        print(stdout)
        
        if stderr:
            print(f"‚ö†Ô∏è STDERR:")
            print(stderr)
            
        # –ü—Ä–æ–±—É–µ–º –ø–∞—Ä—Å–∏—Ç—å JSON –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è session_id
        try:
            response_data = json.loads(stdout)
            session_id = response_data.get('session_id')
            content = response_data.get('content', stdout)
            print(f"üîó Session ID: {session_id}")
            print(f"üìÑ Content: {content}")
        except:
            print("üìù –ù–µ —É–¥–∞–ª–æ—Å—å –ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ JSON")
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        if prompt_file.exists():
            prompt_file.unlink()
            
        return result.returncode == 0, stdout
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False, str(e)

if __name__ == "__main__":
    success, output = test_claude_cli()
    if success:
        print("‚úÖ Claude CLI —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("‚ùå Claude CLI –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        sys.exit(1)