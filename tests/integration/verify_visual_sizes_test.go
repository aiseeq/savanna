package integration

import (
	"testing"

	"github.com/aiseeq/savanna/internal/constants"
	"github.com/aiseeq/savanna/internal/core"
	"github.com/aiseeq/savanna/internal/simulation"
)

// TestVisualSizeVerification —Å–æ–∑–¥–∞—ë—Ç –ø—Ä–æ—Å—Ç—É—é —Å—Ü–µ–Ω—É –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–º–µ—Ä–æ–≤
func TestVisualSizeVerification(t *testing.T) {
	t.Parallel()

	// –°–æ–∑–¥–∞—ë–º –º–∏—Ä 50x38 —Ç–∞–π–ª–æ–≤ (–∫–∞–∫ –≤ main.go)
	world := core.NewWorld(50, 38, 12345)

	// –†–∞–∑–º–µ—â–∞–µ–º –∂–∏–≤–æ—Ç–Ω—ã—Ö –≤ —Ü–µ–Ω—Ç—Ä–µ –∫–∞—Ä—Ç—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
	centerX, centerY := float32(25), float32(19)

	// –°–æ–∑–¥–∞—ë–º –∑–∞–π—Ü–∞ –∏ –≤–æ–ª–∫–∞ —Ä—è–¥–æ–º
	rabbit := simulation.CreateAnimal(world, core.TypeRabbit, centerX-2, centerY)
	wolf := simulation.CreateAnimal(world, core.TypeWolf, centerX+2, centerY)

	// –ü–æ–ª—É—á–∞–µ–º –∏—Ö —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
	rabbitSize, _ := world.GetSize(rabbit)
	wolfSize, _ := world.GetSize(wolf)
	rabbitBehavior, _ := world.GetBehavior(rabbit)
	wolfBehavior, _ := world.GetBehavior(wolf)

	t.Logf("=== –í–ò–ó–£–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –†–ê–ó–ú–ï–†–û–í ===")
	t.Logf("–¶–µ–Ω—Ç—Ä –∫–∞—Ä—Ç—ã: (%.1f, %.1f) —Ç–∞–π–ª–æ–≤", centerX, centerY)
	t.Logf("")
	// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä—ã –∏–∑ –ø–∏–∫—Å–µ–ª–µ–π –≤ —Ç–∞–π–ª—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
	rabbitRadiusTiles := constants.PixelsToTiles(rabbitSize.Radius)
	wolfRadiusTiles := constants.PixelsToTiles(wolfSize.Radius)
	wolfAttackRangeTiles := constants.PixelsToTiles(wolfSize.AttackRange)

	t.Logf("üê∞ –ó–∞—è—Ü (ID:%d) –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ (%.1f, %.1f):", rabbit, centerX-2, centerY)
	t.Logf("   –§–∏–∑–∏—á–µ—Å–∫–∏–π —Ä–∞–¥–∏—É—Å: %.2f —Ç–∞–π–ª–∞", rabbitRadiusTiles)
	t.Logf("   –†–∞–¥–∏—É—Å –≤–∏–¥–µ–Ω–∏—è: %.2f —Ç–∞–π–ª–∞", rabbitBehavior.VisionRange)
	t.Logf("   –î–∏—Å—Ç–∞–Ω—Ü–∏—è –ø–æ–±–µ–≥–∞: %.2f —Ç–∞–π–ª–∞", rabbitBehavior.FleeThreshold)
	t.Logf("")
	t.Logf("üê∫ –í–æ–ª–∫ (ID:%d) –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ (%.1f, %.1f):", wolf, centerX+2, centerY)
	t.Logf("   –§–∏–∑–∏—á–µ—Å–∫–∏–π —Ä–∞–¥–∏—É—Å: %.2f —Ç–∞–π–ª–∞", wolfRadiusTiles)
	t.Logf("   –†–∞–¥–∏—É—Å –≤–∏–¥–µ–Ω–∏—è: %.2f —Ç–∞–π–ª–∞", wolfBehavior.VisionRange)
	t.Logf("   –†–∞–¥–∏—É—Å –∞—Ç–∞–∫–∏: %.2f —Ç–∞–π–ª–∞", wolfAttackRangeTiles)
	t.Logf("")
	t.Logf("üîç –û–∂–∏–¥–∞–µ–º—ã–µ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã:")
	t.Logf("   –°–∏–Ω–∏–π –∫—Ä—É–≥ –∑–∞–π—Ü–∞: –¥–∏–∞–º–µ—Ç—Ä = 0.5 —Ç–∞–π–ª–∞")
	t.Logf("   –ñ—ë–ª—Ç—ã–π –∫—Ä—É–≥ –∑–∞–π—Ü–∞: –¥–∏–∞–º–µ—Ç—Ä = 6.0 —Ç–∞–π–ª–æ–≤ (–≤–∏–¥–µ–Ω–∏–µ)")
	t.Logf("   –°–∏–Ω–∏–π –∫—Ä—É–≥ –≤–æ–ª–∫–∞: –¥–∏–∞–º–µ—Ç—Ä = 1.0 —Ç–∞–π–ª")
	t.Logf("   –ñ—ë–ª—Ç—ã–π –∫—Ä—É–≥ –≤–æ–ª–∫–∞: –¥–∏–∞–º–µ—Ç—Ä = 10.0 —Ç–∞–π–ª–æ–≤ (–≤–∏–¥–µ–Ω–∏–µ)")
	t.Logf("")
	t.Logf("üìè –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –∂–∏–≤–æ—Ç–Ω—ã–º–∏: 4.0 —Ç–∞–π–ª–∞")
	t.Logf("   –í–æ–ª–∫ –í–ò–î–ò–¢ –∑–∞–π—Ü–∞: %t (4.0 < 5.0)", 4.0 < wolfBehavior.VisionRange)
	t.Logf("   –ó–∞—è—Ü –í–ò–î–ò–¢ –≤–æ–ª–∫–∞: %t (4.0 < 3.0)", 4.0 < rabbitBehavior.VisionRange)
	t.Logf("   –í–æ–ª–∫ –º–æ–∂–µ—Ç –ê–¢–ê–ö–û–í–ê–¢–¨: %t (4.0 < %.1f)", 4.0 < wolfAttackRangeTiles, wolfAttackRangeTiles)
	t.Logf("")
	// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—É–º–Ω–æ—Å—Ç–∏ —Ä–∞–∑–º–µ—Ä–æ–≤ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
	if rabbitRadiusTiles <= 0 || rabbitRadiusTiles > 2.0 {
		t.Errorf("‚ùå –ù–µ—Ä–∞–∑—É–º–Ω—ã–π —Ä–∞–¥–∏—É—Å –∑–∞–π—Ü–∞: %.2f (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 0-2.0 —Ç–∞–π–ª–∞)", rabbitRadiusTiles)
	}

	if wolfRadiusTiles <= 0 || wolfRadiusTiles > 3.0 {
		t.Errorf("‚ùå –ù–µ—Ä–∞–∑—É–º–Ω—ã–π —Ä–∞–¥–∏—É—Å –≤–æ–ª–∫–∞: %.2f (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 0-3.0 —Ç–∞–π–ª–∞)", wolfRadiusTiles)
	}

	if rabbitBehavior.VisionRange <= 0 || rabbitBehavior.VisionRange > 10.0 {
		t.Errorf("‚ùå –ù–µ—Ä–∞–∑—É–º–Ω–∞—è –¥–∞–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–Ω–∏—è –∑–∞–π—Ü–∞: %.2f (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 0-10 —Ç–∞–π–ª–æ–≤)", rabbitBehavior.VisionRange)
	}

	if wolfBehavior.VisionRange <= 0 || wolfBehavior.VisionRange > 15.0 {
		t.Errorf("‚ùå –ù–µ—Ä–∞–∑—É–º–Ω–∞—è –¥–∞–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–Ω–∏—è –≤–æ–ª–∫–∞: %.2f (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 0-15 —Ç–∞–π–ª–æ–≤)", wolfBehavior.VisionRange)
	}

	if wolfAttackRangeTiles <= 0 || wolfAttackRangeTiles > 5.0 {
		t.Errorf("‚ùå –ù–µ—Ä–∞–∑—É–º–Ω–∞—è –¥–∞–ª—å–Ω–æ—Å—Ç—å –∞—Ç–∞–∫–∏ –≤–æ–ª–∫–∞: %.2f (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 0-5 —Ç–∞–π–ª–æ–≤)", wolfAttackRangeTiles)
	}

	t.Logf("‚úÖ –í—Å–µ —Ä–∞–∑–º–µ—Ä—ã –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–∞–∑—É–º–Ω–æ—Å—Ç–∏")
	t.Logf("   –î–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏: make build && ./bin/savanna-game")
	t.Logf("   –ñ–µ–ª—Ç—ã–µ –∫—Ä—É–≥–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –†–ê–ó–£–ú–ù–û–ì–û —Ä–∞–∑–º–µ—Ä–∞, –Ω–µ –≥–∏–≥–∞–Ω—Ç—Å–∫–∏–µ!")
}
