# Makefile –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ Savanna - —Å–∏–º—É–ª—è—Ç–æ—Ä —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã —Å–∞–≤–∞–Ω–Ω—ã

.PHONY: build build-with-lint build-fast run run-headless run-animviewer test test-unit test-perf bench fmt lint lint-install lint-fix check generate profile simulate balance clean help

# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
build: ## –°–æ–±—Ä–∞—Ç—å –æ–±–µ –≤–µ—Ä—Å–∏–∏ (–±–µ–∑ –ª–∏–Ω—Ç–∏–Ω–≥–∞)
	@echo "–°–±–æ—Ä–∫–∞ GUI –≤–µ—Ä—Å–∏–∏..."
	go build -o bin/savanna-game ./cmd/game
	@echo "–°–±–æ—Ä–∫–∞ headless –≤–µ—Ä—Å–∏–∏..."
	go build -o bin/savanna-headless ./cmd/headless
	@echo "–°–±–æ—Ä–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä—â–∏–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–π..."
	go build -o bin/savanna-animviewer ./cmd/animviewer
	@echo "–°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

build-with-lint: lint ## –°–æ–±—Ä–∞—Ç—å —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ª–∏–Ω—Ç–µ—Ä–∞
	@echo "–°–±–æ—Ä–∫–∞ —Å –ª–∏–Ω—Ç–∏–Ω–≥–æ–º..."
	go build -o bin/savanna-game ./cmd/game
	go build -o bin/savanna-headless ./cmd/headless
	go build -o bin/savanna-animviewer ./cmd/animviewer
	@echo "–°–±–æ—Ä–∫–∞ —Å –ª–∏–Ω—Ç–∏–Ω–≥–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

build-fast: ## –°–æ–±—Ä–∞—Ç—å –±–µ–∑ –ª–∏–Ω—Ç–∏–Ω–≥–∞ (–±—ã—Å—Ç—Ä–æ)
	@echo "–ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞ –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–æ–∫..."
	go build -o bin/savanna-game ./cmd/game
	go build -o bin/savanna-headless ./cmd/headless
	go build -o bin/savanna-animviewer ./cmd/animviewer
	@echo "–ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

build-windows: ## –°–æ–±—Ä–∞—Ç—å –¥–ª—è Windows —Å –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã–º DPI awareness
	@echo "–°–±–æ—Ä–∫–∞ –¥–ª—è Windows —Å –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã–º DPI awareness..."
	cd cmd/game && x86_64-w64-mingw32-windres resource.rc -o resource.syso 2>/dev/null || echo "windres –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º manifest"
	GOOS=windows GOARCH=amd64 go build -o bin/savanna-game.exe ./cmd/game
	@echo "Windows —Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

run: build ## –ó–∞–ø—É—Å—Ç–∏—Ç—å GUI –≤–µ—Ä—Å–∏—é
	@echo "–ó–∞–ø—É—Å–∫ GUI –≤–µ—Ä—Å–∏–∏ (—Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è–º–∏ –¥–ª—è WSL –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ–º DPI scaling)..."
	DISPLAY=:0 MIT_SHM=0 LIBGL_ALWAYS_SOFTWARE=1 GDK_SCALE=1 GDK_DPI_SCALE=1 QT_AUTO_SCREEN_SCALE_FACTOR=0 QT_SCALE_FACTOR=1 QT_SCREEN_SCALE_FACTORS=1 XCURSOR_SIZE=16 EBITEN_GRAPHICS_LIBRARY=opengl XFORCEDPI=96 ./bin/savanna-game

run-headless: build ## –ó–∞–ø—É—Å—Ç–∏—Ç—å headless –≤–µ—Ä—Å–∏—é
	./bin/savanna-headless

run-animviewer: build ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä—â–∏–∫ –∞–Ω–∏–º–∞—Ü–∏–π
	@echo "–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—â–∏–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–π..."
	DISPLAY=:0 MIT_SHM=0 LIBGL_ALWAYS_SOFTWARE=1 GDK_SCALE=1 GDK_DPI_SCALE=1 QT_AUTO_SCREEN_SCALE_FACTOR=0 QT_SCALE_FACTOR=1 QT_SCREEN_SCALE_FACTORS=1 XCURSOR_SIZE=16 EBITEN_GRAPHICS_LIBRARY=opengl XFORCEDPI=96 ./bin/savanna-animviewer --show wolf

test: ## –í—Å–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ç–µ—Å—Ç—ã
	go test ./...

test-advanced: ## –í—Å–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Å—Ç—ã (property, contract, behavioral, chaos)
	@echo "üß™ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
	go test ./tests/property/... -v
	go test ./tests/contract/... -v
	go test ./tests/behavioral/... -v
	go test ./tests/chaos/... -v

test-all: test test-advanced ## –í—Å–µ —Ç–µ—Å—Ç—ã –≤–∫–ª—é—á–∞—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ

test-unit: ## –¢–æ–ª—å–∫–æ unit —Ç–µ—Å—Ç—ã
	go test ./tests/unit/...

test-property: ## Property-based —Ç–µ—Å—Ç—ã
	go test ./tests/property/... -v

test-contract: ## Contract —Ç–µ—Å—Ç—ã
	go test ./tests/contract/... -v

test-behavioral: ## Behavioral —Ç–µ—Å—Ç—ã (Given-When-Then)
	go test ./tests/behavioral/... -v

test-chaos: ## Chaos Engineering —Ç–µ—Å—Ç—ã
	go test ./tests/chaos/... -v

test-mutation: ## Mutation testing (–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Ç–µ—Å—Ç–æ–≤)
	@echo "üß¨ –ó–∞–ø—É—Å–∫ Mutation Testing..."
	./scripts/mutation_testing.sh

test-perf: ## –¢–µ—Å—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
	go test ./tests/performance/... -v

bench: ## –ë–µ–Ω—á–º–∞—Ä–∫–∏
	go test -bench=. ./...

# –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ –∫–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞
fmt: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
	@echo "–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞..."
	go fmt ./...

lint-install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å golangci-lint
	@echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ golangci-lint..."
	@if ! command -v golangci-lint >/dev/null 2>&1; then \
		echo "–°–∫–∞—á–∏–≤–∞–µ–º golangci-lint..."; \
		curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $$(go env GOPATH)/bin v1.54.2; \
	else \
		echo "golangci-lint —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"; \
	fi

lint: ## –õ–∏–Ω—Ç–µ—Ä (–∞–≤—Ç–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
	@GOPATH=$$(go env GOPATH); \
	LINTER=$$GOPATH/bin/golangci-lint; \
	if [ ! -f "$$LINTER" ]; then \
		echo "golangci-lint –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."; \
		$(MAKE) lint-install; \
	fi; \
	echo "–ó–∞–ø—É—Å–∫ –ª–∏–Ω—Ç–µ—Ä–∞..."; \
	$$LINTER run

lint-fix: ## –ê–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º –ª–∏–Ω—Ç–µ—Ä–∞
	@GOPATH=$$(go env GOPATH); \
	LINTER=$$GOPATH/bin/golangci-lint; \
	if [ ! -f "$$LINTER" ]; then \
		$(MAKE) lint-install; \
	fi; \
	echo "–ê–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º –ª–∏–Ω—Ç–µ—Ä–∞..."; \
	$$LINTER run --fix

check: fmt lint test ## –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ (—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ + –ª–∏–Ω—Ç–µ—Ä + —Ç–µ—Å—Ç—ã)

generate: ## –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞
	go generate ./...

profile: build ## –ó–∞–ø—É—Å–∫ —Å –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ–º
	./bin/savanna-headless -duration=30s -cpuprofile=cpu.prof
	@echo "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è: go tool pprof cpu.prof"

# –°–∏–º—É–ª—è—Ü–∏—è
simulate: build ## –ó–∞–ø—É—Å–∫ headless —Å–∏–º—É–ª—è—Ü–∏–∏
	./bin/savanna-headless -duration=60s

balance: build ## –¢–µ—Å—Ç—ã –±–∞–ª–∞–Ω—Å–∞
	@echo "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –±–∞–ª–∞–Ω—Å–∞ —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã..."
	go test ./scripts/... -v

# –£—Ç–∏–ª–∏—Ç—ã
clean: ## –û—á–∏—Å—Ç–∏—Ç—å —Å–±–æ—Ä–æ—á–Ω—ã–µ —Ñ–∞–π–ª—ã
	rm -rf bin/
	rm -f *.prof

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-15s\033[0m %s\n", $$1, $$2}'

# –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
.DEFAULT_GOAL := help