#!/bin/bash

# Mutation Testing Script –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ Savanna
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤ –ø—É—Ç—ë–º –≤–Ω–µ—Å–µ–Ω–∏—è –±–∞–≥–æ–≤ –≤ –∫–æ–¥ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞–¥–∞—é—Ç –ª–∏ —Ç–µ—Å—Ç—ã

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"
MUTATION_TOOL="go-mutesting"

echo "üß¨ Mutation Testing –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ Savanna"
echo "========================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ go-mutesting
if ! command -v $MUTATION_TOOL &> /dev/null; then
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º go-mutesting..."
    go install github.com/zimmski/go-mutesting/cmd/go-mutesting@latest
    
    if ! command -v $MUTATION_TOOL &> /dev/null; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å go-mutesting"
        echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é:"
        echo "go install github.com/zimmski/go-mutesting/cmd/go-mutesting@latest"
        exit 1
    fi
fi

cd "$PROJECT_ROOT"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ mutation testing –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –ø–∞–∫–µ—Ç–µ
run_mutation_test() {
    local package=$1
    local description=$2
    
    echo ""
    echo "üî¨ –¢–µ—Å—Ç–∏—Ä—É–µ–º: $description"
    echo "üìÅ –ü–∞–∫–µ—Ç: $package"
    echo "----------------------------"
    
    # –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    local results_dir="./mutation_results/$(basename "$package")"
    mkdir -p "$results_dir"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º mutation testing
    echo "–ó–∞–ø—É—Å–∫–∞–µ–º mutation testing..."
    local mutation_output="$results_dir/mutation_output.txt"
    
    if $MUTATION_TOOL --disable=branch --output="$results_dir" "$package" > "$mutation_output" 2>&1; then
        echo "‚úÖ Mutation testing –∑–∞–≤–µ—Ä—à—ë–Ω"
    else
        echo "‚ö†Ô∏è  Mutation testing –∑–∞–≤–µ—Ä—à—ë–Ω —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏"
    fi
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    local total_mutations=0
    local killed_mutations=0
    
    if [[ -f "$mutation_output" ]]; then
        total_mutations=$(grep -c "PASS\|FAIL" "$mutation_output" || echo "0")
        killed_mutations=$(grep -c "FAIL" "$mutation_output" || echo "0")
    fi
    
    if [[ $total_mutations -gt 0 ]]; then
        local survival_rate=$(( (total_mutations - killed_mutations) * 100 / total_mutations ))
        local kill_rate=$(( killed_mutations * 100 / total_mutations ))
        
        echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:"
        echo "   –í—Å–µ–≥–æ –º—É—Ç–∞—Ü–∏–π: $total_mutations"
        echo "   –£–±–∏—Ç–æ —Ç–µ—Å—Ç–∞–º–∏: $killed_mutations"
        echo "   –í—ã–∂–∏–ª–æ: $((total_mutations - killed_mutations))"
        echo "   Kill Rate: ${kill_rate}% (—á–µ–º –≤—ã—à–µ, —Ç–µ–º –ª—É—á—à–µ)"
        echo "   Survival Rate: ${survival_rate}% (—á–µ–º –Ω–∏–∂–µ, —Ç–µ–º –ª—É—á—à–µ)"
        
        # –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Ç–µ—Å—Ç–æ–≤
        if [[ $kill_rate -ge 80 ]]; then
            echo "üèÜ –û—Ç–ª–∏—á–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤!"
        elif [[ $kill_rate -ge 60 ]]; then
            echo "üëç –•–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤"
        elif [[ $kill_rate -ge 40 ]]; then
            echo "‚ö†Ô∏è  –°—Ä–µ–¥–Ω–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤ - –µ—Å—Ç—å —á—Ç–æ —É–ª—É—á—à–∏—Ç—å"
        else
            echo "‚ùå –ü–ª–æ—Ö–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤ - —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞"
        fi
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å –≤—ã–∂–∏–≤—à–∏–µ –º—É—Ç–∞—Ü–∏–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ö
        if [[ $survival_rate -gt 20 ]]; then
            echo ""
            echo "üîç –í—ã–∂–∏–≤—à–∏–µ –º—É—Ç–∞—Ü–∏–∏ (—É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ –ø—Ä–æ–±–µ–ª—ã –≤ —Ç–µ—Å—Ç–∞—Ö):"
            grep "PASS" "$mutation_output" | head -5 || true
            if [[ $(grep -c "PASS" "$mutation_output" || echo "0") -gt 5 ]]; then
                echo "   ... –∏ –µ—â—ë $(($(grep -c "PASS" "$mutation_output") - 5)) –º—É—Ç–∞—Ü–∏–π"
            fi
        fi
    else
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"
    fi
}

# –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
echo "üéØ –í—ã–±–æ—Ä –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è mutation testing..."

# 1. –°–∏—Å—Ç–µ–º–∞ –ø–∏—Ç–∞–Ω–∏—è (–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–∞ –ø–æ—Å–ª–µ –Ω–µ–¥–∞–≤–Ω–∏—Ö –±–∞–≥–æ–≤)
run_mutation_test "./internal/simulation" "–°–∏–º—É–ª—è—Ü–∏—è –∂–∏–≤–æ—Ç–Ω—ã—Ö (–≤–∫–ª—é—á–∞—è –ø–∏—Ç–∞–Ω–∏–µ)"

# 2. –Ø–¥—Ä–æ ECS —Å–∏—Å—Ç–µ–º—ã
run_mutation_test "./internal/core" "ECS —è–¥—Ä–æ —Å–∏—Å—Ç–µ–º—ã"

# 3. –§–∏–∑–∏–∫–∞ –∏ –¥–≤–∏–∂–µ–Ω–∏–µ
run_mutation_test "./internal/physics" "–§–∏–∑–∏–∫–∞ –∏ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è"

# 4. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∏—Ä–∞
run_mutation_test "./internal/generator" "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è terrain –∏ –º–∏—Ä–∞"

echo ""
echo "üìã –û–±—â–∏–π –æ—Ç—á—ë—Ç –ø–æ Mutation Testing"
echo "=================================="

# –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
total_packages=0
good_packages=0
bad_packages=0

for result_dir in ./mutation_results/*/; do
    if [[ -d "$result_dir" ]]; then
        total_packages=$((total_packages + 1))
        
        output_file="$result_dir/mutation_output.txt"
        if [[ -f "$output_file" ]]; then
            total_mutations=$(grep -c "PASS\|FAIL" "$output_file" || echo "0")
            killed_mutations=$(grep -c "FAIL" "$output_file" || echo "0")
            
            if [[ $total_mutations -gt 0 ]]; then
                kill_rate=$(( killed_mutations * 100 / total_mutations ))
                if [[ $kill_rate -ge 60 ]]; then
                    good_packages=$((good_packages + 1))
                else
                    bad_packages=$((bad_packages + 1))
                fi
            fi
        fi
    fi
done

echo "üìä –ò—Ç–æ–≥–∏:"
echo "   –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ –ø–∞–∫–µ—Ç–æ–≤: $total_packages"
echo "   –° —Ö–æ—Ä–æ—à–∏–º –∫–∞—á–µ—Å—Ç–≤–æ–º —Ç–µ—Å—Ç–æ–≤: $good_packages"
echo "   –¢—Ä–µ–±—É—é—Ç —É–ª—É—á—à–µ–Ω–∏—è: $bad_packages"

if [[ $bad_packages -eq 0 ]]; then
    echo "üéâ –í—Å–µ –ø–∞–∫–µ—Ç—ã –∏–º–µ—é—Ç —Ö–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤!"
    exit 0
elif [[ $bad_packages -le 1 ]]; then
    echo "üëç –û–±—â–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤ —Ö–æ—Ä–æ—à–µ–µ, –µ—Å—Ç—å –Ω–µ–±–æ–ª—å—à–∏–µ —É–ª—É—á—à–µ–Ω–∏—è"
    exit 0
else
    echo "‚ö†Ô∏è  –ï—Å—Ç—å –ø–∞–∫–µ—Ç—ã —Å –ø–ª–æ—Ö–∏–º –∫–∞—á–µ—Å—Ç–≤–æ–º —Ç–µ—Å—Ç–æ–≤ - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞"
    exit 1
fi